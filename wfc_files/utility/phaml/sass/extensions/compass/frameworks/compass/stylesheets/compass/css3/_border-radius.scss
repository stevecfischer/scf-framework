@import "shared";

$ default-border-radius:
5
px ! default
;

/
/
Round all corners by a specific amount, defaults to value of ` $ default-border-radius` .
/
/
/
/
When two values are passed, the first is the horizontal radius
/
/
and the second is the vertical radius.
/
/
/
/
Note: webkit does not support shorthand syntax for several corners at once.
/
/
So in the case where you pass several values only the first will be passed to webkit.
/
/
/
/
Examples:
/
/
/
/
.simple{
@include border-radius(4 px, 4 px);
}
/
/
.compound{
@include border-radius(2 px 5 px, 3 px 6 px);
}
/
/
.crazy{
@include border-radius(1 px 3 px 5 px 7 px, 2 px 4 px 6 px 8 px)
}
/
/
/
/
Which generates:
/
/
.simple{
/ / -webkit-border-radius : 4 px 4 px;
/ / -moz-border-radius : 4 px / 4 px;
/ / -o-border-radius : 4 px / 4 px;
/ / -ms-border-radius : 4 px / 4 px;
/ / -khtml-border-radius : 4 px / 4 px;
/ / border-radius : 4 px / 4 px;
}
/
/
/
/
.compound{
/ / -webkit-border-radius : 2 px 3 px;
/ / -moz-border-radius : 2 px 5 px / 3 px 6 px;
/ / -o-border-radius : 2 px 5 px / 3 px 6 px;
/ / -ms-border-radius : 2 px 5 px / 3 px 6 px;
/ / -khtml-border-radius : 2 px 5 px / 3 px 6 px;
/ / border-radius : 2 px 5 px / 3 px 6 px;
}
/
/
/
/
.crazy{
/ / -webkit-border-radius : 1 px 2 px;
/ / -moz-border-radius : 1 px 3 px 5 px 7 px / 2 px 4 px 6 px 8 px;
/ / -o-border-radius : 1 px 3 px 5 px 7 px / 2 px 4 px 6 px 8 px;
/ / -ms-border-radius : 1 px 3 px 5 px 7 px / 2 px 4 px 6 px 8 px;
/ / -khtml-border-radius : 1 px 3 px 5 px 7 px / 2 px 4 px 6 px 8 px;
/ / border-radius : 1 px 3 px 5 px 7 px / 2 px 4 px 6 px 8 px;
}

@mixin border-radius($radius: $default-border-radius, $vertical-radius: false){

@if $vertical-radius{
// Webkit doesn't understand the official shorthand syntax for specifying
// a vertical radius unless so in case there's several we only take the first.
@include experimental(border-radius, first-value-of($radius) first-value-of($vertical-radius), not -moz, -webkit, not -o, not -ms, not -khtml, not official
);
@include experimental("border-radius", $radius unquote("/") $vertical-radius, -moz, not -webkit, -o, -ms, -khtml, official
);
}
@else{
@include experimental(border-radius, $radius);
}
}

/
/
Round radius at position by amount.
/
/
/
/
* legal values for ` $ vert` : ` top`, ` bottom`
/
/
* legal values for ` $ horz` : ` left`, ` right`

@mixin border-corner-radius($vert, $horz, $radius: $default-border-radius){
// Support for mozilla's syntax for specifying a corner
@include experimental("border-radius-#{$vert}#{$horz}", $radius, -moz, not -webkit, not -o, not -ms, not -khtml, not official
);
@include experimental("border-#{$vert}-#{$horz}-radius", $radius, not -moz, -webkit, -o, -ms, -khtml, official
);

}

/
/
Round top-left corner only

@mixin border-top-left-radius($radius: $default-border-radius){
@include border-corner-radius(top, left, $radius);
}

/
/
Round top-right corner only

@mixin border-top-right-radius($radius: $default-border-radius){
@include border-corner-radius(top, right, $radius);
}

/
/
Round bottom-left corner only

@mixin border-bottom-left-radius($radius: $default-border-radius){
@include border-corner-radius(bottom, left, $radius);
}

/
/
Round bottom-right corner only

@mixin border-bottom-right-radius($radius: $default-border-radius){
@include border-corner-radius(bottom, right, $radius);
}

/
/
Round both top corners by amount
@mixin border-top-radius($radius: $default-border-radius){
@include border-top-left-radius($radius);
@include border-top-right-radius($radius);
}

/
/
Round both right corners by amount
@mixin border-right-radius($radius: $default-border-radius){
@include border-top-right-radius($radius);
@include border-bottom-right-radius($radius);
}

/
/
Round both bottom corners by amount
@mixin border-bottom-radius($radius: $default-border-radius){
@include border-bottom-left-radius($radius);
@include border-bottom-right-radius($radius);
}

/
/
Round both left corners by amount
@mixin border-left-radius($radius: $default-border-radius){
@include border-top-left-radius($radius);
@include border-bottom-left-radius($radius);
}
